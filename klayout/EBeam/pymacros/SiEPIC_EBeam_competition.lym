<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description/>
 <version/>
 <category>pymacros</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>false</show-in-menu>
 <group-name/>
 <menu-path/>
 <interpreter>python</interpreter>
 <dsl-interpreter-name/>
 <text># Python script
# SiEPIC_EBeam-competition Library
# - Silicon photonics device design competition entries

"""


*******
GDS:
*******
imported from SiEPIC-EBeam-competition/*.gds

*******
PCells:
*******


"""
from pya import *

# import xml before lumapi (SiEPIC.lumerical), otherwise XML doesn't work:
from xml.etree import cElementTree


class SiEPIC_EBeam_competition(Library):
  """
  The library where we will put the PCells and GDS into 
  """

  def __init__(self):

    tech_name = 'EBeam'
    library = 'SiEPIC-'+tech_name+'-competition'
    
    print("Initializing '%s' Library." % library)


    import os
    GDS_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), "SiEPIC-EBeam-competition")
    files = os.listdir(GDS_path)
    for filename in files:
      if '.gds' in filename or '.GDS' in filename:
        GDS_file = os.path.join(GDS_path, filename)
        print (" reading: %s" % GDS_file)
        self.layout().read(GDS_file)
  #      [self.layout().rename_cell(i, self.layout().cell_name(i).replace('_', ' ')) for i in range(0, self.layout().cells())]
    
    
    # Create the PCell declarations

    # Register us the library with the technology name
    # If a library with that name already existed, it will be replaced then.
    self.register(library)

    if int(Application.instance().version().split('.')[1]) &gt; 24:
      # KLayout v0.25 introduced technology variable:
      self.technology=tech_name
       
# Instantiate and register the library
SiEPIC_EBeam_competition()



</text>
</klayout-macro>
