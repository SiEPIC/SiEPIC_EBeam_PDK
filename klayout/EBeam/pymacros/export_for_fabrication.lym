<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>Export design for EBeam fabrication</description>
 <version/>
 <category>pymacros</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <priority>0</priority>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name/>
 <menu-path>siepic_menu.export.end</menu-path>
 <interpreter>python</interpreter>
 <dsl-interpreter-name/>
 <text>
import pya

def export_for_fabrication():
 
    extra = "static" # what to append at the end of the filename.
  
    from SiEPIC import _globals
    from SiEPIC.utils import get_layout_variables
    TECHNOLOGY, lv, ly, topcell = get_layout_variables()

    # Save the layout prior to exporting, if there are changes.
    mw = pya.Application.instance().main_window()
    if mw.manager().has_undo():
        mw.cm_save()
    layout_filename = mw.current_view().active_cellview().filename()
    if len(layout_filename) == 0:
        raise Exception("Please save your layout before exporting.")
   

    # Save the layout, without PCell info, for fabrication
    save_options = pya.SaveLayoutOptions()
    save_options.write_context_info=False  # remove $$$CONTEXT_INFO$$$
    save_options.format='OASIS' # smaller file size
    save_options.oasis_compression_level=10
    save_options.oasis_permissive=True
    file_out = os.path.join(os.path.dirname(layout_filename), os.path.splitext(os.path.basename(layout_filename))[0]+'_%s.'%extra+save_options.format[0:3].lower())
    print("saving output %s: %s" % (save_options.format, file_out) )

    if SiEPIC.__version__ &lt; '0.3.73':
        pya.MessageBox.warning("Errors", "Please upgrade to SiEPIC-Tools version 0.3.73 or greater.", pya.MessageBox.Ok)
    else:
        ly.cell_character_replacement(forbidden_cell_characters = '=', replacement_cell_character = '_')
        ly.cell_character_replacement(forbidden_cell_characters = ',', replacement_cell_character = '_')

    try:
        ly.write(file_out,save_options)
    except:
        raise Exception("Problem exporting your layout.")
 
    pya.MessageBox.warning("Success.", "Layout exported successfully: \n%s" %file_out, pya.MessageBox.Ok)

export_for_fabrication()
</text>
</klayout-macro>
